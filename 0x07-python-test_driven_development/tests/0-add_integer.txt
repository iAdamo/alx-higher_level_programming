The 0-add_integer module
======================

Using add_integer
-------------------


>>> add_integer = __import__('0-add_integer').add_integer

-----------------------------
Testing Documentation length:
-----------------------------

>>> l1 = __import__("0-add_integer").__doc__
>>> l2 = __import__("0-add_integer").add_integer.__doc__

>>> len(l1) > 1
True

>>> len(l2) > 1
True

----------------------
Testing correct input:
----------------------
>>> add_integer(10, 20)
30

>>> add_integer(-10, 50)
40

>>> add_integer(2)
100

>>> add_integer(2.3, 3)
5

----------------------
Testing invalid input:
----------------------
>>> add_integer(2, 24, 10)
Traceback (most recent call last):
  ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer()
Traceback (most recent call last):
  ...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(None)
Traceback (most recent call last):
  ...
TypeError: a must be an integer

>>> add_integer(float('nan'), 2)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add_integer(float('inf'), 2)
Traceback (most recent call last):
  ...
OverflowError: cannot convert float infinity to integer

>>> add_integer("text", "text")
Traceback (most recent call last):
  ...
TypeError: a must be an integer
